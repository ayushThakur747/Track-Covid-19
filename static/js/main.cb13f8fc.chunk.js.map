{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","images/covidImg.png","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportData","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDom","render","document","getElementById"],"mappings":"kFACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,wB,4NCkEpJC,EA7DD,SAAC,GAAqD,IAAD,IAAnDC,KAAOC,EAA4C,EAA5CA,UAAUC,EAAkC,EAAlCA,UAAUC,EAAwB,EAAxBA,OAAOC,EAAiB,EAAjBA,WAC9C,OAAIH,EAKA,yBAAKI,UAAWC,IAAOC,WACnB,kBAACC,EAAA,EAAD,CAAMD,WAAS,EAACE,QAAS,EAAGC,QAAQ,UAChC,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOY,WACzE,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,YACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAChB,kBAAC,IAAD,CACIC,MAAO,EACPC,IAAKxB,EAAUyB,MACfC,SAAU,IACVC,UAAU,OAGlB,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAKzB,GAAY0B,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,wCAIR,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOJ,YACzE,kBAACiB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,aACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAChB,kBAAC,IAAD,CACIC,MAAO,EACPC,IAAKvB,EAAUwB,MACfC,SAAU,IACVC,UAAU,OAGlB,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAKzB,GAAY0B,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,8CAIR,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOH,SACzE,kBAACgB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,UACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAChB,kBAAC,IAAD,CACIC,MAAO,EACPC,IAAKtB,EAAOuB,MACZC,SAAU,IACVC,UAAU,OAGlB,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAKzB,GAAY0B,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,2CAlDT,a,yBCNTQ,EAAK,kCAEEC,EAAS,uCAAG,WAAMC,GAAN,2BAAAC,EAAA,6DACjBC,EAAgBJ,EAEjBE,IACCE,EAAa,UAAMJ,EAAN,sBAAuBE,IAJnB,kBAQ+CG,IAAMC,IAAIF,GARzD,2BAQVnC,KAAMC,EARI,EAQJA,UAAWC,EARP,EAQOA,UAAWC,EARlB,EAQkBA,OAAQC,EAR1B,EAQ0BA,WAR1B,kBAUV,CAAEH,YAAWC,YAAWC,SAAQC,eAVtB,kCAYjBkC,QAAQC,IAAR,MAZiB,0DAAH,sDAiBTC,EAAc,uCAAE,gCAAAN,EAAA,+EAEDE,IAAMC,IAAN,UAAaN,EAAb,WAFC,uBAEd/B,EAFc,EAEdA,KAEDyC,EAAezC,EAAK0C,KAAI,SAACC,GAAD,MAAc,CACxC1C,UAAW0C,EAAU1C,UAAU2C,MAC/BzC,OAAQwC,EAAUxC,OAAOyC,MACzBC,KAAMF,EAAUG,eAPC,kBASdL,GATc,yFAAF,qDAedM,EAAc,uCAAE,8BAAAb,EAAA,+EAGYE,IAAMC,IAAN,UAAaN,EAAb,eAHZ,uBAGRiB,EAHQ,EAGdhD,KAAMgD,UAHQ,kBAKdA,EAAUN,KAAI,SAACT,GAAD,OAAaA,EAAQgB,SALrB,yFAAF,qD,yBCwCZC,EAtED,SAAC,GAAkD,IAAD,IAAhDlD,KAAMC,EAA0C,EAA1CA,UAAWE,EAA+B,EAA/BA,OAAQD,EAAuB,EAAvBA,UAAW+B,EAAY,EAAZA,QAAY,EAE3BkB,mBAAS,IAFkB,mBAErDR,EAFqD,KAE1CS,EAF0C,KAI5DC,qBAAU,WAEN,IAAMC,EAAQ,uCAAG,sBAAApB,EAAA,kEACbkB,EADa,SACMZ,IADN,6EAAH,qDAGdF,QAAQC,IAAII,GACZW,MACF,IAEF,IAAMC,EACHZ,EAAUa,OAEL,kBAAC,IAAD,CAAMxD,KAAM,CACJyD,OAAQd,EAAUD,KAAI,qBAAEG,QACxBa,SAAS,CAAC,CACN1D,KAAK2C,EAAUD,KAAI,qBAAEzC,aACrB0D,MAAO,WACPC,YAAa,UACbC,MAAM,GACZ,CACM7D,KAAK2C,EAAUD,KAAI,qBAAEvC,UACrBwD,MAAO,SACPC,YAAa,MACbE,gBAAiB,oBACjBD,MAAM,OAGhB,KAIJE,EACF9D,EAEQ,kBAAC,IAAD,CACID,KAAO,CACHyD,OAAQ,CAAC,WAAW,YAAY,UAChCC,SAAU,CAAC,CACPC,MAAO,SACPG,gBAAiB,CAAC,oBACE,kBACA,qBAEpB9D,KAAK,CAACC,EAAUyB,MAAMxB,EAAUwB,MAAMvB,EAAOuB,UAKrDsC,QAAS,CACLC,OAAO,CAAEC,SAAS,GAClBC,MAAO,CAAED,SAAS,EAAME,KAAK,oBAAD,OAAqBnC,OAIzD,KAIZ,OACI,yBAAK5B,UAAWC,IAAOC,WAClB0B,EAAU8B,EAAWR,I,qECnCnBc,EA5BO,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,oBAA0B,EACRnB,mBAAS,IADD,mBAC1CoB,EAD0C,KACxBC,EADwB,KAWjD,OARAnB,qBAAU,YACM,uCAAG,sBAAAnB,EAAA,kEACfsC,EADe,SACIzB,IADJ,6EAAH,qDAIdO,KACC,CAACkB,IAGF,kBAACC,EAAA,EAAD,CAAapE,UAAWC,IAAOoE,aAC7B,kBAACC,EAAA,EAAD,CAAcC,aAAa,GAAGC,SAAU,SAACC,GAAD,OAAOR,EAAoBQ,EAAEC,OAAOrD,SAC1E,4BAAQA,MAAM,KAAd,UAGG6C,EAAiB7B,KACf,SAACT,EAAS+C,GAAV,OACC,4BAAQC,IAAKD,EAAGtD,MAAOO,GACpBA,SCqBFiD,E,4MAnCXC,MAAO,CACHnF,KAAK,GACLiC,QAAQ,I,EASZqC,oB,uCAAsB,WAAMrC,GAAN,eAAAC,EAAA,sEAEQF,EAAUC,GAFlB,OAEZmD,EAFY,OAKlB,EAAKC,SAAS,CAACrF,KAAKoF,EAAanD,QAASA,IALxB,2C,wPALQD,I,OAApBoD,E,OAENE,KAAKD,SAAS,CAACrF,KAAKoF,I,qIAWf,IAAD,EAEgBE,KAAKH,MAAnBnF,EAFF,EAEEA,KAAKiC,EAFP,EAEOA,QAEX,OACI,yBAAK5B,UAAaC,IAAOC,WACrB,yBAAKF,UAAWC,IAAOiF,MAAOC,IAAKC,IAAaC,IAAI,aACpD,kBAAC,EAAD,CAAO1F,KAAMA,IACb,kBAAC,EAAD,CAAgBsE,oBAAqBgB,KAAKhB,sBAC1C,kBAAC,EAAD,CAAOtE,KAAMA,EAAMiC,QAASA,S,GA9B1B0D,IAAMC,WCNxBC,IAASC,OAAO,kBAAC,EAAD,MAAOC,SAASC,eAAe,U,mBCJ/CnG,EAAOC,QAAU,CAAC,UAAY,uBAAuB,MAAQ,qB,mBCA7DD,EAAOC,QAAU,CAAC,UAAY,2B,mBCD9BD,EAAOC,QAAU,IAA0B,sC,mBCC3CD,EAAOC,QAAU,CAAC,YAAc,qC","file":"static/js/main.cb13f8fc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3brUk\",\"card\":\"Cards_card__2t2bQ\",\"infected\":\"Cards_infected__aKbAH\",\"recovered\":\"Cards_recovered__2VCT-\",\"deaths\":\"Cards_deaths__3DoT8\"};","import React from 'react';\r\nimport {Card,CardContent,Typography,Grid} from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport styles from './Cards.module.css';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({data: {confirmed,recovered,deaths,lastUpdate} })=> {\r\n    if(!confirmed){\r\n        return 'loading..';\r\n    }\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp \r\n                                start={0}\r\n                                end={confirmed.value}     \r\n                                duration={2.5}\r\n                                separator=','\r\n                            />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp \r\n                                start={0}\r\n                                end={recovered.value}     \r\n                                duration={2.5}\r\n                                separator=','\r\n                            />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recovered people from covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp \r\n                                start={0}\r\n                                end={deaths.value}     \r\n                                duration={2.5}\r\n                                separator=','\r\n                            />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths caused by covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url =' https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async(country)=> {\r\n    let changeableUrl = url;\r\n\r\n    if(country){\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n\r\n    try{\r\n        const {data:{confirmed, recovered, deaths, lastUpdate}} = await axios.get(changeableUrl);\r\n       \r\n        return { confirmed, recovered, deaths, lastUpdate };\r\n    }catch(error){\r\n        console.log(error);    \r\n    }\r\n\r\n}\r\n\r\nexport const fetchDailyData =async ()=>{\r\n    try {\r\n        const {data} =await axios.get(`${url}/daily`);\r\n        \r\n        const modifiedData = data.map((dailyData)=>({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportData,\r\n        }));\r\n        return modifiedData;\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const fetchCountries =async () =>{\r\n\r\n    try {\r\n        const {data:{countries}} = await axios.get(`${url}/countries`);\r\n        \r\n        return countries.map((country) => country.name );\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport {Line,Bar} from  'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({data:{confirmed, deaths, recovered},country})=> {\r\n\r\n    const [dailyData, setDailyData]= useState([]);\r\n\r\n    useEffect(()=>{\r\n\r\n        const fetchAPI = async () =>{\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        console.log(dailyData);\r\n        fetchAPI();\r\n    },[]);\r\n\r\n    const lineChart =(\r\n       dailyData.length  \r\n        ? (\r\n            <Line data={{\r\n                    labels: dailyData.map(({date})=>date),\r\n                    datasets:[{\r\n                        data:dailyData.map(({confirmed})=>confirmed),\r\n                        label: 'Infected',\r\n                        borderColor: '#3333ff',\r\n                        fill: true\r\n                },{\r\n                        data:dailyData.map(({deaths})=>deaths),\r\n                        label: 'Deaths',\r\n                        borderColor: 'red',\r\n                        backgroundColor: 'rgba(255,0,0,0.5)',\r\n                        fill: true\r\n                }],\r\n            }}\r\n        />) : null\r\n\r\n    );\r\n\r\n    const barChart =(\r\n        confirmed\r\n            ? (\r\n                <Bar\r\n                    data ={{\r\n                        labels: ['Infected','Recovered','Deaths'],\r\n                        datasets: [{\r\n                            label: 'People',\r\n                            backgroundColor: ['rgba(0,0,255,0.5)',\r\n                                                'rgba(0,255,0.5)',\r\n                                                'rgba(255,0,0,0.5)'  ] ,\r\n                                                \r\n                            data:[confirmed.value,recovered.value,deaths.value]\r\n                        }],\r\n                    \r\n\r\n                    }}\r\n                    options={{\r\n                        legend:{ display: false},\r\n                        title: { display: true, text:`current state in ${country}`}\r\n                    }}\r\n                \r\n                />\r\n            ) : null\r\n    )\r\n\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n  const [fetchedCountries, setCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setCountries(await fetchCountries());\r\n    }\r\n\r\n    fetchAPI();\r\n  }, [setCountries]);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n        <option value=\" \">Global</option>\r\n       \r\n        {\r\n           fetchedCountries.map(\r\n             (country, i) => \r\n              <option key={i} value={country}> \r\n                {country} \r\n              </option> \r\n            ) \r\n        }   \r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\nexport default CountryPicker;","import React,{Component} from 'react';\r\n\r\nimport Cards from './components/Cards/Cards';\r\nimport Chart from './components/Chart/Chart';\r\n\r\nimport styles from './App.module.css';\r\nimport {fetchData} from './api';\r\n\r\nimport coronaImage from './images/covidImg.png';\r\nimport CountryPicker from './components/CountryPicker/CountryPicker';\r\n\r\nclass App extends React.Component{\r\n    \r\n    state= {\r\n        data:{},\r\n        country:''\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const fetchedData = await fetchData();\r\n        \r\n        this.setState({data:fetchedData});\r\n    }\r\n\r\n    handleCountryChange = async(country) => {\r\n        \r\n        const fetchedData = await fetchData(country);    \r\n        //fetch the data\r\n        //set the data\r\n        this.setState({data:fetchedData, country: country});\r\n    }\r\n\r\n    render(){\r\n\r\n        const{data,country}=this.state;\r\n                \r\n        return(\r\n            <div className = {styles.container}>\r\n                <img className={styles.image} src={coronaImage} alt=\"COVID-19\"/>\r\n                <Cards data={data}/>\r\n                <CountryPicker  handleCountryChange={this.handleCountryChange}/>\r\n                <Chart data={data} country={country}/>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\n\r\nimport App from'./App';\r\n\r\nReactDom.render(<App/>,document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__-mTHP\",\"image\":\"App_image__gSCMP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__SP_IY\"};","module.exports = __webpack_public_path__ + \"static/media/covidImg.d7265326.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1aQ6P\"};"],"sourceRoot":""}